{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"toc_visible":true,"authorship_tag":"ABX9TyNk+Arw9kpyUkfr9bum6gg2"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["#import"],"metadata":{"id":"2P1ZAI15MwSo"}},{"cell_type":"code","execution_count":222,"metadata":{"id":"J41B-ZukMH3Q","executionInfo":{"status":"ok","timestamp":1700837814225,"user_tz":-60,"elapsed":435,"user":{"displayName":"quentin crouzoulon","userId":"01290518250657410380"}}},"outputs":[],"source":["import pandas as pd\n","import numpy as np\n","import random\n","import datetime as dt\n","import matplotlib.pyplot as plt\n","from google.colab import drive\n","import re"]},{"cell_type":"markdown","source":["# METEO"],"metadata":{"id":"H1q1LSxNOLBj"}},{"cell_type":"markdown","source":["## IMPORT FICHIER"],"metadata":{"id":"YEQO3FwbMzoM"}},{"cell_type":"code","source":["drive.mount('/content/drive')\n","meteo_data = pd.read_csv('/content/drive/My Drive/AMFF/GIRONDE/meteo.csv')\n","meteo_data.head(3)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":180},"id":"tiZ5OCIqM2Kt","executionInfo":{"status":"ok","timestamp":1700837816749,"user_tz":-60,"elapsed":2178,"user":{"displayName":"quentin crouzoulon","userId":"01290518250657410380"}},"outputId":"136b4f47-7803-4d9a-b982-27996811ebb8"},"execution_count":223,"outputs":[{"output_type":"stream","name":"stdout","text":["Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"]},{"output_type":"execute_result","data":{"text/plain":["  mois annee                   Station       TNN   TNM  TMM  TXM       TXX  \\\n","0    1  2023            Abbeville (80)  -3.8le 22  3.7    6  8.2  13.2le 1   \n","1    1  2023  Abbeville - centre  (80)  -4.2le 22    4  6.3  8.7  13.6le 1   \n","2    1  2023              ACHERES (78)  -6.1le 29  3.4    6  8.6    16le 1   \n","\n","     RR  ENS Rafale  \n","0  71.2  NaN   79.2  \n","1  90.4  NaN   43.5  \n","2  42.4  NaN    NaN  "],"text/html":["\n","  <div id=\"df-2667dd17-fb8e-4757-9674-c4348f141a6f\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>mois</th>\n","      <th>annee</th>\n","      <th>Station</th>\n","      <th>TNN</th>\n","      <th>TNM</th>\n","      <th>TMM</th>\n","      <th>TXM</th>\n","      <th>TXX</th>\n","      <th>RR</th>\n","      <th>ENS</th>\n","      <th>Rafale</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>2023</td>\n","      <td>Abbeville (80)</td>\n","      <td>-3.8le 22</td>\n","      <td>3.7</td>\n","      <td>6</td>\n","      <td>8.2</td>\n","      <td>13.2le 1</td>\n","      <td>71.2</td>\n","      <td>NaN</td>\n","      <td>79.2</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>2023</td>\n","      <td>Abbeville - centre  (80)</td>\n","      <td>-4.2le 22</td>\n","      <td>4</td>\n","      <td>6.3</td>\n","      <td>8.7</td>\n","      <td>13.6le 1</td>\n","      <td>90.4</td>\n","      <td>NaN</td>\n","      <td>43.5</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>2023</td>\n","      <td>ACHERES (78)</td>\n","      <td>-6.1le 29</td>\n","      <td>3.4</td>\n","      <td>6</td>\n","      <td>8.6</td>\n","      <td>16le 1</td>\n","      <td>42.4</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2667dd17-fb8e-4757-9674-c4348f141a6f')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-2667dd17-fb8e-4757-9674-c4348f141a6f button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-2667dd17-fb8e-4757-9674-c4348f141a6f');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-a0258454-229d-4384-9870-761bc8e1324d\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-a0258454-229d-4384-9870-761bc8e1324d')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-a0258454-229d-4384-9870-761bc8e1324d button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":223}]},{"cell_type":"code","source":["meteo_data.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"sJ4_D_jbjoGx","executionInfo":{"status":"ok","timestamp":1700837817860,"user_tz":-60,"elapsed":1121,"user":{"displayName":"quentin crouzoulon","userId":"01290518250657410380"}},"outputId":"db885d56-9494-48ad-fc0b-4a214d5fee6c"},"execution_count":224,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 317336 entries, 0 to 317335\n","Data columns (total 11 columns):\n"," #   Column   Non-Null Count   Dtype \n","---  ------   --------------   ----- \n"," 0   mois     317336 non-null  object\n"," 1   annee    317336 non-null  object\n"," 2   Station  317336 non-null  object\n"," 3    TNN     242229 non-null  object\n"," 4   TNM      236104 non-null  object\n"," 5   TMM      233133 non-null  object\n"," 6   TXM      234501 non-null  object\n"," 7   TXX      241050 non-null  object\n"," 8   RR       295118 non-null  object\n"," 9   ENS      66544 non-null   object\n"," 10  Rafale   157142 non-null  object\n","dtypes: object(11)\n","memory usage: 26.6+ MB\n"]}]},{"cell_type":"code","source":["# supprimer les espaces dans les entêtes\n","meteo_data = meteo_data.rename(columns=lambda x: x.replace(' ', ''))"],"metadata":{"id":"TKL567NBzrzu","executionInfo":{"status":"ok","timestamp":1700837817861,"user_tz":-60,"elapsed":7,"user":{"displayName":"quentin crouzoulon","userId":"01290518250657410380"}}},"execution_count":225,"outputs":[]},{"cell_type":"code","source":["# vérifier les lignes ou les entêtes apparaisse\n","duplicates = meteo_data[meteo_data.duplicated(subset=['mois', 'annee', 'Station', 'TNM', 'TMM', 'TXM', 'TXX', 'RR', 'ENS', 'Rafale'], keep=False)]\n","duplicates.head(10)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":363},"id":"zUhYVVdnqu3t","executionInfo":{"status":"ok","timestamp":1700837818222,"user_tz":-60,"elapsed":367,"user":{"displayName":"quentin crouzoulon","userId":"01290518250657410380"}},"outputId":"8a4747dc-425b-46b1-b853-1688d26751e7"},"execution_count":226,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       mois  annee  Station    TNN  TNM  TMM  TXM  TXX  RR  ENS  Rafale\n","1462   mois  annee  Station   TNN   TNM  TMM  TXM  TXX  RR  ENS  Rafale\n","2924   mois  annee  Station   TNN   TNM  TMM  TXM  TXX  RR  ENS  Rafale\n","4393   mois  annee  Station   TNN   TNM  TMM  TXM  TXX  RR  ENS  Rafale\n","5868   mois  annee  Station   TNN   TNM  TMM  TXM  TXX  RR  ENS  Rafale\n","7343   mois  annee  Station   TNN   TNM  TMM  TXM  TXX  RR  ENS  Rafale\n","8817   mois  annee  Station   TNN   TNM  TMM  TXM  TXX  RR  ENS  Rafale\n","10311  mois  annee  Station   TNN   TNM  TMM  TXM  TXX  RR  ENS  Rafale\n","11821  mois  annee  Station   TNN   TNM  TMM  TXM  TXX  RR  ENS  Rafale\n","13349  mois  annee  Station   TNN   TNM  TMM  TXM  TXX  RR  ENS  Rafale\n","14875  mois  annee  Station   TNN   TNM  TMM  TXM  TXX  RR  ENS  Rafale"],"text/html":["\n","  <div id=\"df-6338c705-499a-4c48-99b4-e57a5752515f\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>mois</th>\n","      <th>annee</th>\n","      <th>Station</th>\n","      <th>TNN</th>\n","      <th>TNM</th>\n","      <th>TMM</th>\n","      <th>TXM</th>\n","      <th>TXX</th>\n","      <th>RR</th>\n","      <th>ENS</th>\n","      <th>Rafale</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1462</th>\n","      <td>mois</td>\n","      <td>annee</td>\n","      <td>Station</td>\n","      <td>TNN</td>\n","      <td>TNM</td>\n","      <td>TMM</td>\n","      <td>TXM</td>\n","      <td>TXX</td>\n","      <td>RR</td>\n","      <td>ENS</td>\n","      <td>Rafale</td>\n","    </tr>\n","    <tr>\n","      <th>2924</th>\n","      <td>mois</td>\n","      <td>annee</td>\n","      <td>Station</td>\n","      <td>TNN</td>\n","      <td>TNM</td>\n","      <td>TMM</td>\n","      <td>TXM</td>\n","      <td>TXX</td>\n","      <td>RR</td>\n","      <td>ENS</td>\n","      <td>Rafale</td>\n","    </tr>\n","    <tr>\n","      <th>4393</th>\n","      <td>mois</td>\n","      <td>annee</td>\n","      <td>Station</td>\n","      <td>TNN</td>\n","      <td>TNM</td>\n","      <td>TMM</td>\n","      <td>TXM</td>\n","      <td>TXX</td>\n","      <td>RR</td>\n","      <td>ENS</td>\n","      <td>Rafale</td>\n","    </tr>\n","    <tr>\n","      <th>5868</th>\n","      <td>mois</td>\n","      <td>annee</td>\n","      <td>Station</td>\n","      <td>TNN</td>\n","      <td>TNM</td>\n","      <td>TMM</td>\n","      <td>TXM</td>\n","      <td>TXX</td>\n","      <td>RR</td>\n","      <td>ENS</td>\n","      <td>Rafale</td>\n","    </tr>\n","    <tr>\n","      <th>7343</th>\n","      <td>mois</td>\n","      <td>annee</td>\n","      <td>Station</td>\n","      <td>TNN</td>\n","      <td>TNM</td>\n","      <td>TMM</td>\n","      <td>TXM</td>\n","      <td>TXX</td>\n","      <td>RR</td>\n","      <td>ENS</td>\n","      <td>Rafale</td>\n","    </tr>\n","    <tr>\n","      <th>8817</th>\n","      <td>mois</td>\n","      <td>annee</td>\n","      <td>Station</td>\n","      <td>TNN</td>\n","      <td>TNM</td>\n","      <td>TMM</td>\n","      <td>TXM</td>\n","      <td>TXX</td>\n","      <td>RR</td>\n","      <td>ENS</td>\n","      <td>Rafale</td>\n","    </tr>\n","    <tr>\n","      <th>10311</th>\n","      <td>mois</td>\n","      <td>annee</td>\n","      <td>Station</td>\n","      <td>TNN</td>\n","      <td>TNM</td>\n","      <td>TMM</td>\n","      <td>TXM</td>\n","      <td>TXX</td>\n","      <td>RR</td>\n","      <td>ENS</td>\n","      <td>Rafale</td>\n","    </tr>\n","    <tr>\n","      <th>11821</th>\n","      <td>mois</td>\n","      <td>annee</td>\n","      <td>Station</td>\n","      <td>TNN</td>\n","      <td>TNM</td>\n","      <td>TMM</td>\n","      <td>TXM</td>\n","      <td>TXX</td>\n","      <td>RR</td>\n","      <td>ENS</td>\n","      <td>Rafale</td>\n","    </tr>\n","    <tr>\n","      <th>13349</th>\n","      <td>mois</td>\n","      <td>annee</td>\n","      <td>Station</td>\n","      <td>TNN</td>\n","      <td>TNM</td>\n","      <td>TMM</td>\n","      <td>TXM</td>\n","      <td>TXX</td>\n","      <td>RR</td>\n","      <td>ENS</td>\n","      <td>Rafale</td>\n","    </tr>\n","    <tr>\n","      <th>14875</th>\n","      <td>mois</td>\n","      <td>annee</td>\n","      <td>Station</td>\n","      <td>TNN</td>\n","      <td>TNM</td>\n","      <td>TMM</td>\n","      <td>TXM</td>\n","      <td>TXX</td>\n","      <td>RR</td>\n","      <td>ENS</td>\n","      <td>Rafale</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6338c705-499a-4c48-99b4-e57a5752515f')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-6338c705-499a-4c48-99b4-e57a5752515f button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-6338c705-499a-4c48-99b4-e57a5752515f');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-223e5a4d-060b-4de9-b83c-be2665104039\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-223e5a4d-060b-4de9-b83c-be2665104039')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-223e5a4d-060b-4de9-b83c-be2665104039 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":226}]},{"cell_type":"code","source":["meteo_data.drop_duplicates(subset=[\"mois\",\t\"annee\",\t\"Station\",\t\"TNM\",\t\"TMM\",\t\"TXM\",\t\"TXX\",\t\"RR\",\t\"ENS\",\t\"Rafale\"], keep=\"first\", inplace=True)\n"],"metadata":{"id":"LjdLvwCFmB0r","executionInfo":{"status":"ok","timestamp":1700837818941,"user_tz":-60,"elapsed":728,"user":{"displayName":"quentin crouzoulon","userId":"01290518250657410380"}}},"execution_count":227,"outputs":[]},{"cell_type":"code","source":["# conversion des années en int\n","meteo_data['annee'] = pd.to_numeric(meteo_data['annee'], errors='coerce', downcast='integer')\n","meteo_data = meteo_data.dropna(subset=['annee'])\n","meteo_data['annee'] = meteo_data['annee'].astype(int)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"68cAt1qzjtRg","executionInfo":{"status":"ok","timestamp":1700837819324,"user_tz":-60,"elapsed":390,"user":{"displayName":"quentin crouzoulon","userId":"01290518250657410380"}},"outputId":"b49a68c8-0caf-458e-960c-893ccfd9f312"},"execution_count":228,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-228-05814255d4d9>:4: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  meteo_data['annee'] = meteo_data['annee'].astype(int)\n"]}]},{"cell_type":"code","source":["meteo_data[(meteo_data[\"mois\"] == \"11\") & (meteo_data[\"annee\"] == 2000) & (meteo_data[\"Station\"] == \"Bordeaux-Mérignac (33)\")]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":80},"id":"TEjrXEzZON0v","executionInfo":{"status":"ok","timestamp":1700837819555,"user_tz":-60,"elapsed":236,"user":{"displayName":"quentin crouzoulon","userId":"01290518250657410380"}},"outputId":"acf4c048-4a78-4337-f1e1-d004a4addf47"},"execution_count":229,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       mois  annee                 Station       TNN  TNM   TMM   TXM  \\\n","186309   11   2000  Bordeaux-Mérignac (33)  3.5le 11  7.6  10.5  13.3   \n","\n","              TXX     RR   ENS Rafale  \n","186309  16.8le 27  331.1  44.8   98.2  "],"text/html":["\n","  <div id=\"df-d13a7132-b7b8-4f54-882e-afd11dbc47e0\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>mois</th>\n","      <th>annee</th>\n","      <th>Station</th>\n","      <th>TNN</th>\n","      <th>TNM</th>\n","      <th>TMM</th>\n","      <th>TXM</th>\n","      <th>TXX</th>\n","      <th>RR</th>\n","      <th>ENS</th>\n","      <th>Rafale</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>186309</th>\n","      <td>11</td>\n","      <td>2000</td>\n","      <td>Bordeaux-Mérignac (33)</td>\n","      <td>3.5le 11</td>\n","      <td>7.6</td>\n","      <td>10.5</td>\n","      <td>13.3</td>\n","      <td>16.8le 27</td>\n","      <td>331.1</td>\n","      <td>44.8</td>\n","      <td>98.2</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d13a7132-b7b8-4f54-882e-afd11dbc47e0')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-d13a7132-b7b8-4f54-882e-afd11dbc47e0 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-d13a7132-b7b8-4f54-882e-afd11dbc47e0');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":229}]},{"cell_type":"code","source":["# #on veut supprimer le \"le...\" dans les colonnes tnn et txx et ne garder que les températures\n","meteo_data['TNN'] = meteo_data['TNN'].str.extract(r'([-+]?\\d+\\.\\d+|[-+]?\\d+)(?=le)').astype(float)\n","meteo_data['TXX'] = meteo_data['TXX'].str.extract(r'([-+]?\\d+\\.\\d+|[-+]?\\d+)(?=le)').astype(float)"],"metadata":{"id":"T_8EZp31jRIg","executionInfo":{"status":"ok","timestamp":1700837822132,"user_tz":-60,"elapsed":2585,"user":{"displayName":"quentin crouzoulon","userId":"01290518250657410380"}}},"execution_count":230,"outputs":[]},{"cell_type":"code","source":["meteo_data[(meteo_data[\"mois\"] == \"11\") & (meteo_data[\"annee\"] == 2000) & (meteo_data[\"Station\"] == \"Bordeaux-Mérignac (33)\")]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":80},"id":"8aiLAfS3jBbY","executionInfo":{"status":"ok","timestamp":1700837822133,"user_tz":-60,"elapsed":15,"user":{"displayName":"quentin crouzoulon","userId":"01290518250657410380"}},"outputId":"d55a3077-941a-4bdc-9117-9781c38ef804"},"execution_count":231,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       mois  annee                 Station  TNN  TNM   TMM   TXM   TXX     RR  \\\n","186309   11   2000  Bordeaux-Mérignac (33)  3.5  7.6  10.5  13.3  16.8  331.1   \n","\n","         ENS Rafale  \n","186309  44.8   98.2  "],"text/html":["\n","  <div id=\"df-efb1594c-9f14-4eaa-ab00-821408324a43\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>mois</th>\n","      <th>annee</th>\n","      <th>Station</th>\n","      <th>TNN</th>\n","      <th>TNM</th>\n","      <th>TMM</th>\n","      <th>TXM</th>\n","      <th>TXX</th>\n","      <th>RR</th>\n","      <th>ENS</th>\n","      <th>Rafale</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>186309</th>\n","      <td>11</td>\n","      <td>2000</td>\n","      <td>Bordeaux-Mérignac (33)</td>\n","      <td>3.5</td>\n","      <td>7.6</td>\n","      <td>10.5</td>\n","      <td>13.3</td>\n","      <td>16.8</td>\n","      <td>331.1</td>\n","      <td>44.8</td>\n","      <td>98.2</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-efb1594c-9f14-4eaa-ab00-821408324a43')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-efb1594c-9f14-4eaa-ab00-821408324a43 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-efb1594c-9f14-4eaa-ab00-821408324a43');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":231}]},{"cell_type":"code","source":["# meteo_data = meteo_data[meteo_data['annee'] >= 2000]"],"metadata":{"id":"AI7ePl7RlXgh","executionInfo":{"status":"ok","timestamp":1700837822133,"user_tz":-60,"elapsed":12,"user":{"displayName":"quentin crouzoulon","userId":"01290518250657410380"}}},"execution_count":232,"outputs":[]},{"cell_type":"code","source":["# Extraire les chiffres de la colonne 'Station' et les assigner à la colonne 'DEP'\n","meteo_data['DEP'] = meteo_data['Station'].str.extract(r'\\((\\d+)\\)')\n","\n","meteo_data.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"wZi40nXmlpC6","executionInfo":{"status":"ok","timestamp":1700837823609,"user_tz":-60,"elapsed":1486,"user":{"displayName":"quentin crouzoulon","userId":"01290518250657410380"}},"outputId":"126d98ec-385b-4743-a0b9-32479408ce00"},"execution_count":233,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  mois  annee                   Station  TNN  TNM  TMM   TXM   TXX    RR  ENS  \\\n","0    1   2023            Abbeville (80) -3.8  3.7    6   8.2  13.2  71.2  NaN   \n","1    1   2023  Abbeville - centre  (80) -4.2    4  6.3   8.7  13.6  90.4  NaN   \n","2    1   2023              ACHERES (78) -6.1  3.4    6   8.6  16.0  42.4  NaN   \n","3    1   2023                ADAST (65) -6.0  0.2  4.8   9.4  22.6  69.8  NaN   \n","4    1   2023                 Agde (34) -1.3  4.2  7.8  11.4  17.3  10.2  NaN   \n","\n","  Rafale DEP  \n","0   79.2  80  \n","1   43.5  80  \n","2    NaN  78  \n","3    NaN  65  \n","4    NaN  34  "],"text/html":["\n","  <div id=\"df-2ab03162-f3ea-461c-a347-54abd80f1e70\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>mois</th>\n","      <th>annee</th>\n","      <th>Station</th>\n","      <th>TNN</th>\n","      <th>TNM</th>\n","      <th>TMM</th>\n","      <th>TXM</th>\n","      <th>TXX</th>\n","      <th>RR</th>\n","      <th>ENS</th>\n","      <th>Rafale</th>\n","      <th>DEP</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>2023</td>\n","      <td>Abbeville (80)</td>\n","      <td>-3.8</td>\n","      <td>3.7</td>\n","      <td>6</td>\n","      <td>8.2</td>\n","      <td>13.2</td>\n","      <td>71.2</td>\n","      <td>NaN</td>\n","      <td>79.2</td>\n","      <td>80</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>2023</td>\n","      <td>Abbeville - centre  (80)</td>\n","      <td>-4.2</td>\n","      <td>4</td>\n","      <td>6.3</td>\n","      <td>8.7</td>\n","      <td>13.6</td>\n","      <td>90.4</td>\n","      <td>NaN</td>\n","      <td>43.5</td>\n","      <td>80</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>2023</td>\n","      <td>ACHERES (78)</td>\n","      <td>-6.1</td>\n","      <td>3.4</td>\n","      <td>6</td>\n","      <td>8.6</td>\n","      <td>16.0</td>\n","      <td>42.4</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>78</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>2023</td>\n","      <td>ADAST (65)</td>\n","      <td>-6.0</td>\n","      <td>0.2</td>\n","      <td>4.8</td>\n","      <td>9.4</td>\n","      <td>22.6</td>\n","      <td>69.8</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>65</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1</td>\n","      <td>2023</td>\n","      <td>Agde (34)</td>\n","      <td>-1.3</td>\n","      <td>4.2</td>\n","      <td>7.8</td>\n","      <td>11.4</td>\n","      <td>17.3</td>\n","      <td>10.2</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>34</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2ab03162-f3ea-461c-a347-54abd80f1e70')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-2ab03162-f3ea-461c-a347-54abd80f1e70 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-2ab03162-f3ea-461c-a347-54abd80f1e70');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-9198d39d-9733-45ff-9486-c7139b067e28\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-9198d39d-9733-45ff-9486-c7139b067e28')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-9198d39d-9733-45ff-9486-c7139b067e28 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":233}]},{"cell_type":"code","source":["#drop les lignes qui n'ont pas de département associé\n","meteo_data = meteo_data.dropna(subset=['DEP'])"],"metadata":{"id":"4sGFLrmSh0Ev","executionInfo":{"status":"ok","timestamp":1700837823610,"user_tz":-60,"elapsed":10,"user":{"displayName":"quentin crouzoulon","userId":"01290518250657410380"}}},"execution_count":234,"outputs":[]},{"cell_type":"code","source":["meteo_data['mois'] = meteo_data['mois'].astype(int)\n","meteo_data['DEP'] = meteo_data['DEP'].astype(int)\n","#conversion des donnée meteo en float\n","meteo_data[['TNN', 'TNM', 'TMM', 'TXM', 'TXX', 'RR', 'ENS', 'Rafale']] = meteo_data[['TNN', 'TNM', 'TMM', 'TXM', 'TXX', 'RR', 'ENS', 'Rafale']].astype(float)\n"],"metadata":{"id":"wQ5CV2X8hkSQ","executionInfo":{"status":"ok","timestamp":1700837824003,"user_tz":-60,"elapsed":401,"user":{"displayName":"quentin crouzoulon","userId":"01290518250657410380"}}},"execution_count":235,"outputs":[]},{"cell_type":"code","source":["meteo_data = meteo_data[(meteo_data[\"DEP\"] == 33)]"],"metadata":{"id":"Z-JoQyvisoDw","executionInfo":{"status":"ok","timestamp":1700837824004,"user_tz":-60,"elapsed":21,"user":{"displayName":"quentin crouzoulon","userId":"01290518250657410380"}}},"execution_count":236,"outputs":[]},{"cell_type":"code","source":["# meteo_data[meteo_data['Rafale'].isna()]"],"metadata":{"id":"i8zFwyKAp9m7","executionInfo":{"status":"ok","timestamp":1700837824005,"user_tz":-60,"elapsed":21,"user":{"displayName":"quentin crouzoulon","userId":"01290518250657410380"}}},"execution_count":237,"outputs":[]},{"cell_type":"code","source":["meteo_data.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"XrSscVesslTl","executionInfo":{"status":"ok","timestamp":1700837824006,"user_tz":-60,"elapsed":21,"user":{"displayName":"quentin crouzoulon","userId":"01290518250657410380"}},"outputId":"e87350a8-be08-4ff9-c0ff-25d0dbc2c7f5"},"execution_count":238,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","Int64Index: 8379 entries, 101 to 317190\n","Data columns (total 12 columns):\n"," #   Column   Non-Null Count  Dtype  \n","---  ------   --------------  -----  \n"," 0   mois     8379 non-null   int64  \n"," 1   annee    8379 non-null   int64  \n"," 2   Station  8379 non-null   object \n"," 3   TNN      4558 non-null   float64\n"," 4   TNM      4440 non-null   float64\n"," 5   TMM      4426 non-null   float64\n"," 6   TXM      4450 non-null   float64\n"," 7   TXX      4572 non-null   float64\n"," 8   RR       8099 non-null   float64\n"," 9   ENS      1559 non-null   float64\n"," 10  Rafale   3189 non-null   float64\n"," 11  DEP      8379 non-null   int64  \n","dtypes: float64(8), int64(3), object(1)\n","memory usage: 851.0+ KB\n"]}]},{"cell_type":"code","source":["meteo_data[(meteo_data[\"mois\"] == 11) & (meteo_data[\"annee\"] == 2022) & (meteo_data[\"DEP\"] == 33)]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":756},"id":"IBEBGEEHMv1y","executionInfo":{"status":"ok","timestamp":1700837824006,"user_tz":-60,"elapsed":16,"user":{"displayName":"quentin crouzoulon","userId":"01290518250657410380"}},"outputId":"c772525d-c568-4082-9797-54a5406f1d89"},"execution_count":239,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       mois  annee                                  Station  TNN   TNM   TMM  \\\n","29606    11   2022                               Baron (33)  2.7   8.3  11.9   \n","29617    11   2022                        BELIN BELIET (33)  1.2   7.5  12.2   \n","29618    11   2022                        Belin-Béliet (33)  1.3   7.3  11.9   \n","29661    11   2022                   Bordeaux-Mérignac (33)  3.8   8.7  12.5   \n","29667    11   2022                             Bouliac (33)  2.6   8.4  12.3   \n","29722    11   2022                             Canéjan (33)  3.2   8.5  12.2   \n","29749    11   2022                              CAZATS (33)  1.8   8.1  12.1   \n","29750    11   2022           Cazaux - La Teste de Buch (33)  0.8   8.0  12.7   \n","29939    11   2022                           Frontenac (33)  1.3   7.4  11.6   \n","29981    11   2022                       Gujan-Mestras (33)  2.1   8.3  12.6   \n","30074    11   2022                    La Teste de Buch (33)  2.0   9.1  13.1   \n","30081    11   2022                       Lacanau-Océan (33)  0.9  10.4  13.6   \n","30158    11   2022                   Lège - Cap Ferret (33)  4.0  11.1  14.1   \n","30173    11   2022             Les Salles-de-Castillon (33) -1.2   5.4  10.6   \n","30404    11   2022                            PAUILLAC (33)  2.0   8.6  12.3   \n","30576    11   2022               Saint-Germain-du-Puch (33)  2.6   7.6  11.5   \n","30724    11   2022                          ST EMILION (33)  1.4   7.6  11.9   \n","30726    11   2022                          ST GERVAIS (33)  3.1   8.5  12.4   \n","30737    11   2022              ST SULPICE DE POMMIERS (33)  1.8   7.6  11.9   \n","30852    11   2022                   VENDAYS-MONTALIVE (33) -0.5   7.6  12.2   \n","30855    11   2022                              Vensac (33)  2.6   8.7  12.2   \n","30951    11   2022  [MAE] Lycée des Graves - GRADIGNAN (33)  3.1   8.1  12.1   \n","\n","        TXM   TXX     RR    ENS  Rafale  DEP  \n","29606  15.6  21.3  142.6  103.9    54.7   33  \n","29617  17.0  24.3  162.8  110.1     NaN   33  \n","29618  16.5  22.9  198.8   62.3    43.5   33  \n","29661  16.4  21.9  147.7  105.6    82.8   33  \n","29667  16.1  22.4  165.8    NaN    40.2   33  \n","29722  16.0  21.8  153.6  100.0    51.5   33  \n","29749  16.0  22.3  124.2    NaN     NaN   33  \n","29750  17.4  23.2  145.3    NaN    87.1   33  \n","29939  15.9  21.8   98.0    NaN    53.1   33  \n","29981  17.0  22.8  195.0   95.8    64.4   33  \n","30074  17.2  23.1  146.4   92.4    75.6   33  \n","30081  16.8  22.7  164.6   96.2    80.5   33  \n","30158  17.1  21.8  126.1    NaN   113.0   33  \n","30173  15.8  21.8  123.4   90.2    48.3   33  \n","30404  16.0  20.9  126.6  103.5     NaN   33  \n","30576  15.3  21.2  135.2  112.5    46.7   33  \n","30724  16.3  22.3  101.5  109.8     NaN   33  \n","30726  16.2  21.6  107.6    NaN     NaN   33  \n","30737  16.2  22.1   97.6    NaN     NaN   33  \n","30852  16.8  23.3  103.8    NaN     NaN   33  \n","30855  15.6  20.5   56.0   23.5    51.5   33  \n","30951  16.2  21.4    NaN   66.3    35.4   33  "],"text/html":["\n","  <div id=\"df-a1696074-54a8-42bc-93cc-a3228dfe7d27\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>mois</th>\n","      <th>annee</th>\n","      <th>Station</th>\n","      <th>TNN</th>\n","      <th>TNM</th>\n","      <th>TMM</th>\n","      <th>TXM</th>\n","      <th>TXX</th>\n","      <th>RR</th>\n","      <th>ENS</th>\n","      <th>Rafale</th>\n","      <th>DEP</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>29606</th>\n","      <td>11</td>\n","      <td>2022</td>\n","      <td>Baron (33)</td>\n","      <td>2.7</td>\n","      <td>8.3</td>\n","      <td>11.9</td>\n","      <td>15.6</td>\n","      <td>21.3</td>\n","      <td>142.6</td>\n","      <td>103.9</td>\n","      <td>54.7</td>\n","      <td>33</td>\n","    </tr>\n","    <tr>\n","      <th>29617</th>\n","      <td>11</td>\n","      <td>2022</td>\n","      <td>BELIN BELIET (33)</td>\n","      <td>1.2</td>\n","      <td>7.5</td>\n","      <td>12.2</td>\n","      <td>17.0</td>\n","      <td>24.3</td>\n","      <td>162.8</td>\n","      <td>110.1</td>\n","      <td>NaN</td>\n","      <td>33</td>\n","    </tr>\n","    <tr>\n","      <th>29618</th>\n","      <td>11</td>\n","      <td>2022</td>\n","      <td>Belin-Béliet (33)</td>\n","      <td>1.3</td>\n","      <td>7.3</td>\n","      <td>11.9</td>\n","      <td>16.5</td>\n","      <td>22.9</td>\n","      <td>198.8</td>\n","      <td>62.3</td>\n","      <td>43.5</td>\n","      <td>33</td>\n","    </tr>\n","    <tr>\n","      <th>29661</th>\n","      <td>11</td>\n","      <td>2022</td>\n","      <td>Bordeaux-Mérignac (33)</td>\n","      <td>3.8</td>\n","      <td>8.7</td>\n","      <td>12.5</td>\n","      <td>16.4</td>\n","      <td>21.9</td>\n","      <td>147.7</td>\n","      <td>105.6</td>\n","      <td>82.8</td>\n","      <td>33</td>\n","    </tr>\n","    <tr>\n","      <th>29667</th>\n","      <td>11</td>\n","      <td>2022</td>\n","      <td>Bouliac (33)</td>\n","      <td>2.6</td>\n","      <td>8.4</td>\n","      <td>12.3</td>\n","      <td>16.1</td>\n","      <td>22.4</td>\n","      <td>165.8</td>\n","      <td>NaN</td>\n","      <td>40.2</td>\n","      <td>33</td>\n","    </tr>\n","    <tr>\n","      <th>29722</th>\n","      <td>11</td>\n","      <td>2022</td>\n","      <td>Canéjan (33)</td>\n","      <td>3.2</td>\n","      <td>8.5</td>\n","      <td>12.2</td>\n","      <td>16.0</td>\n","      <td>21.8</td>\n","      <td>153.6</td>\n","      <td>100.0</td>\n","      <td>51.5</td>\n","      <td>33</td>\n","    </tr>\n","    <tr>\n","      <th>29749</th>\n","      <td>11</td>\n","      <td>2022</td>\n","      <td>CAZATS (33)</td>\n","      <td>1.8</td>\n","      <td>8.1</td>\n","      <td>12.1</td>\n","      <td>16.0</td>\n","      <td>22.3</td>\n","      <td>124.2</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>33</td>\n","    </tr>\n","    <tr>\n","      <th>29750</th>\n","      <td>11</td>\n","      <td>2022</td>\n","      <td>Cazaux - La Teste de Buch (33)</td>\n","      <td>0.8</td>\n","      <td>8.0</td>\n","      <td>12.7</td>\n","      <td>17.4</td>\n","      <td>23.2</td>\n","      <td>145.3</td>\n","      <td>NaN</td>\n","      <td>87.1</td>\n","      <td>33</td>\n","    </tr>\n","    <tr>\n","      <th>29939</th>\n","      <td>11</td>\n","      <td>2022</td>\n","      <td>Frontenac (33)</td>\n","      <td>1.3</td>\n","      <td>7.4</td>\n","      <td>11.6</td>\n","      <td>15.9</td>\n","      <td>21.8</td>\n","      <td>98.0</td>\n","      <td>NaN</td>\n","      <td>53.1</td>\n","      <td>33</td>\n","    </tr>\n","    <tr>\n","      <th>29981</th>\n","      <td>11</td>\n","      <td>2022</td>\n","      <td>Gujan-Mestras (33)</td>\n","      <td>2.1</td>\n","      <td>8.3</td>\n","      <td>12.6</td>\n","      <td>17.0</td>\n","      <td>22.8</td>\n","      <td>195.0</td>\n","      <td>95.8</td>\n","      <td>64.4</td>\n","      <td>33</td>\n","    </tr>\n","    <tr>\n","      <th>30074</th>\n","      <td>11</td>\n","      <td>2022</td>\n","      <td>La Teste de Buch (33)</td>\n","      <td>2.0</td>\n","      <td>9.1</td>\n","      <td>13.1</td>\n","      <td>17.2</td>\n","      <td>23.1</td>\n","      <td>146.4</td>\n","      <td>92.4</td>\n","      <td>75.6</td>\n","      <td>33</td>\n","    </tr>\n","    <tr>\n","      <th>30081</th>\n","      <td>11</td>\n","      <td>2022</td>\n","      <td>Lacanau-Océan (33)</td>\n","      <td>0.9</td>\n","      <td>10.4</td>\n","      <td>13.6</td>\n","      <td>16.8</td>\n","      <td>22.7</td>\n","      <td>164.6</td>\n","      <td>96.2</td>\n","      <td>80.5</td>\n","      <td>33</td>\n","    </tr>\n","    <tr>\n","      <th>30158</th>\n","      <td>11</td>\n","      <td>2022</td>\n","      <td>Lège - Cap Ferret (33)</td>\n","      <td>4.0</td>\n","      <td>11.1</td>\n","      <td>14.1</td>\n","      <td>17.1</td>\n","      <td>21.8</td>\n","      <td>126.1</td>\n","      <td>NaN</td>\n","      <td>113.0</td>\n","      <td>33</td>\n","    </tr>\n","    <tr>\n","      <th>30173</th>\n","      <td>11</td>\n","      <td>2022</td>\n","      <td>Les Salles-de-Castillon (33)</td>\n","      <td>-1.2</td>\n","      <td>5.4</td>\n","      <td>10.6</td>\n","      <td>15.8</td>\n","      <td>21.8</td>\n","      <td>123.4</td>\n","      <td>90.2</td>\n","      <td>48.3</td>\n","      <td>33</td>\n","    </tr>\n","    <tr>\n","      <th>30404</th>\n","      <td>11</td>\n","      <td>2022</td>\n","      <td>PAUILLAC (33)</td>\n","      <td>2.0</td>\n","      <td>8.6</td>\n","      <td>12.3</td>\n","      <td>16.0</td>\n","      <td>20.9</td>\n","      <td>126.6</td>\n","      <td>103.5</td>\n","      <td>NaN</td>\n","      <td>33</td>\n","    </tr>\n","    <tr>\n","      <th>30576</th>\n","      <td>11</td>\n","      <td>2022</td>\n","      <td>Saint-Germain-du-Puch (33)</td>\n","      <td>2.6</td>\n","      <td>7.6</td>\n","      <td>11.5</td>\n","      <td>15.3</td>\n","      <td>21.2</td>\n","      <td>135.2</td>\n","      <td>112.5</td>\n","      <td>46.7</td>\n","      <td>33</td>\n","    </tr>\n","    <tr>\n","      <th>30724</th>\n","      <td>11</td>\n","      <td>2022</td>\n","      <td>ST EMILION (33)</td>\n","      <td>1.4</td>\n","      <td>7.6</td>\n","      <td>11.9</td>\n","      <td>16.3</td>\n","      <td>22.3</td>\n","      <td>101.5</td>\n","      <td>109.8</td>\n","      <td>NaN</td>\n","      <td>33</td>\n","    </tr>\n","    <tr>\n","      <th>30726</th>\n","      <td>11</td>\n","      <td>2022</td>\n","      <td>ST GERVAIS (33)</td>\n","      <td>3.1</td>\n","      <td>8.5</td>\n","      <td>12.4</td>\n","      <td>16.2</td>\n","      <td>21.6</td>\n","      <td>107.6</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>33</td>\n","    </tr>\n","    <tr>\n","      <th>30737</th>\n","      <td>11</td>\n","      <td>2022</td>\n","      <td>ST SULPICE DE POMMIERS (33)</td>\n","      <td>1.8</td>\n","      <td>7.6</td>\n","      <td>11.9</td>\n","      <td>16.2</td>\n","      <td>22.1</td>\n","      <td>97.6</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>33</td>\n","    </tr>\n","    <tr>\n","      <th>30852</th>\n","      <td>11</td>\n","      <td>2022</td>\n","      <td>VENDAYS-MONTALIVE (33)</td>\n","      <td>-0.5</td>\n","      <td>7.6</td>\n","      <td>12.2</td>\n","      <td>16.8</td>\n","      <td>23.3</td>\n","      <td>103.8</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>33</td>\n","    </tr>\n","    <tr>\n","      <th>30855</th>\n","      <td>11</td>\n","      <td>2022</td>\n","      <td>Vensac (33)</td>\n","      <td>2.6</td>\n","      <td>8.7</td>\n","      <td>12.2</td>\n","      <td>15.6</td>\n","      <td>20.5</td>\n","      <td>56.0</td>\n","      <td>23.5</td>\n","      <td>51.5</td>\n","      <td>33</td>\n","    </tr>\n","    <tr>\n","      <th>30951</th>\n","      <td>11</td>\n","      <td>2022</td>\n","      <td>[MAE] Lycée des Graves - GRADIGNAN (33)</td>\n","      <td>3.1</td>\n","      <td>8.1</td>\n","      <td>12.1</td>\n","      <td>16.2</td>\n","      <td>21.4</td>\n","      <td>NaN</td>\n","      <td>66.3</td>\n","      <td>35.4</td>\n","      <td>33</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a1696074-54a8-42bc-93cc-a3228dfe7d27')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-a1696074-54a8-42bc-93cc-a3228dfe7d27 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-a1696074-54a8-42bc-93cc-a3228dfe7d27');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-a8789e9f-4eef-44bd-8793-d670bf620dc1\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-a8789e9f-4eef-44bd-8793-d670bf620dc1')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-a8789e9f-4eef-44bd-8793-d670bf620dc1 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":239}]},{"cell_type":"markdown","source":["essayer de regrouper les lignes qui ont le meme DEP, mois et annee et mean les autres colonnes"],"metadata":{"id":"kxdgmG_IzZd_"}},{"cell_type":"code","source":["df = meteo_data.copy()\n","df.fillna(method='bfill', inplace=True)"],"metadata":{"id":"v1DMHrsCtGWX","executionInfo":{"status":"ok","timestamp":1700837824404,"user_tz":-60,"elapsed":411,"user":{"displayName":"quentin crouzoulon","userId":"01290518250657410380"}}},"execution_count":240,"outputs":[]},{"cell_type":"code","source":["df.fillna(method='ffill', inplace=True)"],"metadata":{"id":"JOT_T0MZvzSn","executionInfo":{"status":"ok","timestamp":1700837824406,"user_tz":-60,"elapsed":57,"user":{"displayName":"quentin crouzoulon","userId":"01290518250657410380"}}},"execution_count":241,"outputs":[]},{"cell_type":"code","source":["df.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"27eOtsl6mG44","executionInfo":{"status":"ok","timestamp":1700837824407,"user_tz":-60,"elapsed":57,"user":{"displayName":"quentin crouzoulon","userId":"01290518250657410380"}},"outputId":"3f248e02-2db6-4cb9-db1d-035e19041eb7"},"execution_count":242,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","Int64Index: 8379 entries, 101 to 317190\n","Data columns (total 12 columns):\n"," #   Column   Non-Null Count  Dtype  \n","---  ------   --------------  -----  \n"," 0   mois     8379 non-null   int64  \n"," 1   annee    8379 non-null   int64  \n"," 2   Station  8379 non-null   object \n"," 3   TNN      8379 non-null   float64\n"," 4   TNM      8379 non-null   float64\n"," 5   TMM      8379 non-null   float64\n"," 6   TXM      8379 non-null   float64\n"," 7   TXX      8379 non-null   float64\n"," 8   RR       8379 non-null   float64\n"," 9   ENS      8379 non-null   float64\n"," 10  Rafale   8379 non-null   float64\n"," 11  DEP      8379 non-null   int64  \n","dtypes: float64(8), int64(3), object(1)\n","memory usage: 851.0+ KB\n"]}]},{"cell_type":"code","source":["# Grouper par DEP, mois et annee\n","grouped = df.groupby(['DEP', 'mois', 'annee'])\n","\n","# Aggrégation avec exclusion des NaN\n","aggregated_data = grouped.agg({\n","    'TNN': 'min',\n","    'TNM': 'min',\n","    'TMM': 'mean',\n","    'TXM': 'max',\n","    'TXX': 'max',\n","    'RR': 'max',\n","    'ENS': 'max',\n","    'Rafale': 'max',\n","}).reset_index()\n","\n","# Sélectionner la première station qui apparaît pour chaque combinaison unique\n","df = aggregated_data.groupby(['DEP', 'mois', 'annee']).first().reset_index()\n"],"metadata":{"id":"yUzXrhvRRU4p","executionInfo":{"status":"ok","timestamp":1700837824407,"user_tz":-60,"elapsed":54,"user":{"displayName":"quentin crouzoulon","userId":"01290518250657410380"}}},"execution_count":243,"outputs":[]},{"cell_type":"code","source":["df[(df[\"mois\"] == 11) & (df[\"annee\"] == 2022) & (df[\"DEP\"] == 33)]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":80},"id":"FXyOt8BH0sCA","executionInfo":{"status":"ok","timestamp":1700837824409,"user_tz":-60,"elapsed":55,"user":{"displayName":"quentin crouzoulon","userId":"01290518250657410380"}},"outputId":"09149147-c131-4efc-c4a5-4d7b2fe287f2"},"execution_count":244,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      DEP  mois  annee  TNN  TNM        TMM   TXM   TXX     RR    ENS  Rafale\n","1502   33    11   2022 -1.2  5.4  12.268182  17.4  24.3  198.8  112.5   113.0"],"text/html":["\n","  <div id=\"df-0ef5be56-2911-48e8-a77e-3c72f4f239c2\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>DEP</th>\n","      <th>mois</th>\n","      <th>annee</th>\n","      <th>TNN</th>\n","      <th>TNM</th>\n","      <th>TMM</th>\n","      <th>TXM</th>\n","      <th>TXX</th>\n","      <th>RR</th>\n","      <th>ENS</th>\n","      <th>Rafale</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1502</th>\n","      <td>33</td>\n","      <td>11</td>\n","      <td>2022</td>\n","      <td>-1.2</td>\n","      <td>5.4</td>\n","      <td>12.268182</td>\n","      <td>17.4</td>\n","      <td>24.3</td>\n","      <td>198.8</td>\n","      <td>112.5</td>\n","      <td>113.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0ef5be56-2911-48e8-a77e-3c72f4f239c2')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-0ef5be56-2911-48e8-a77e-3c72f4f239c2 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-0ef5be56-2911-48e8-a77e-3c72f4f239c2');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":244}]},{"cell_type":"code","source":["df.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"gZBlH1YX7T51","executionInfo":{"status":"ok","timestamp":1700837824409,"user_tz":-60,"elapsed":52,"user":{"displayName":"quentin crouzoulon","userId":"01290518250657410380"}},"outputId":"e14db969-efba-4cea-d8e7-eeca1e19f319"},"execution_count":245,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 1640 entries, 0 to 1639\n","Data columns (total 11 columns):\n"," #   Column  Non-Null Count  Dtype  \n","---  ------  --------------  -----  \n"," 0   DEP     1640 non-null   int64  \n"," 1   mois    1640 non-null   int64  \n"," 2   annee   1640 non-null   int64  \n"," 3   TNN     1640 non-null   float64\n"," 4   TNM     1640 non-null   float64\n"," 5   TMM     1640 non-null   float64\n"," 6   TXM     1640 non-null   float64\n"," 7   TXX     1640 non-null   float64\n"," 8   RR      1640 non-null   float64\n"," 9   ENS     1640 non-null   float64\n"," 10  Rafale  1640 non-null   float64\n","dtypes: float64(8), int64(3)\n","memory usage: 141.1 KB\n"]}]},{"cell_type":"code","source":["df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"UXYSsq56wdT1","executionInfo":{"status":"ok","timestamp":1700837824410,"user_tz":-60,"elapsed":46,"user":{"displayName":"quentin crouzoulon","userId":"01290518250657410380"}},"outputId":"9a65214b-3e2e-4179-9cc5-787ff7921d22"},"execution_count":246,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      DEP  mois  annee   TNN  TNM       TMM   TXM   TXX     RR    ENS  Rafale\n","0      33     1   1886  -3.4  1.6  4.700000   7.7  13.7  132.0   77.2    83.3\n","1      33     1   1887  -3.4  1.6  4.700000   7.7  13.7  131.0   77.2    83.3\n","2      33     1   1888  -3.4  1.6  4.700000   7.7  13.7   14.0   77.2    83.3\n","3      33     1   1889  -3.4  1.6  4.700000   7.7  13.7   68.0   77.2    83.3\n","4      33     1   1890  -3.4  1.6  4.700000   7.7  13.7  111.0   77.2    83.3\n","...   ...   ...    ...   ...  ...       ...   ...   ...    ...    ...     ...\n","1635   33    12   2018 -17.8 -6.3  8.952381  13.8  18.6  121.4   65.8   104.0\n","1636   33    12   2019  -3.6  4.5  9.647619  13.9  18.2  140.6   76.3   148.3\n","1637   33    12   2020  -3.9  3.3  8.553846  13.0  18.7  322.8   78.0   137.9\n","1638   33    12   2021  -6.6  2.0  8.303571  13.7  20.3  198.2  120.7   100.8\n","1639   33    12   2022  -7.8  3.4  8.490909  13.3  21.3   94.6   94.2    88.9\n","\n","[1640 rows x 11 columns]"],"text/html":["\n","  <div id=\"df-d853e527-9944-4d12-948d-959fae8f0186\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>DEP</th>\n","      <th>mois</th>\n","      <th>annee</th>\n","      <th>TNN</th>\n","      <th>TNM</th>\n","      <th>TMM</th>\n","      <th>TXM</th>\n","      <th>TXX</th>\n","      <th>RR</th>\n","      <th>ENS</th>\n","      <th>Rafale</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>33</td>\n","      <td>1</td>\n","      <td>1886</td>\n","      <td>-3.4</td>\n","      <td>1.6</td>\n","      <td>4.700000</td>\n","      <td>7.7</td>\n","      <td>13.7</td>\n","      <td>132.0</td>\n","      <td>77.2</td>\n","      <td>83.3</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>33</td>\n","      <td>1</td>\n","      <td>1887</td>\n","      <td>-3.4</td>\n","      <td>1.6</td>\n","      <td>4.700000</td>\n","      <td>7.7</td>\n","      <td>13.7</td>\n","      <td>131.0</td>\n","      <td>77.2</td>\n","      <td>83.3</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>33</td>\n","      <td>1</td>\n","      <td>1888</td>\n","      <td>-3.4</td>\n","      <td>1.6</td>\n","      <td>4.700000</td>\n","      <td>7.7</td>\n","      <td>13.7</td>\n","      <td>14.0</td>\n","      <td>77.2</td>\n","      <td>83.3</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>33</td>\n","      <td>1</td>\n","      <td>1889</td>\n","      <td>-3.4</td>\n","      <td>1.6</td>\n","      <td>4.700000</td>\n","      <td>7.7</td>\n","      <td>13.7</td>\n","      <td>68.0</td>\n","      <td>77.2</td>\n","      <td>83.3</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>33</td>\n","      <td>1</td>\n","      <td>1890</td>\n","      <td>-3.4</td>\n","      <td>1.6</td>\n","      <td>4.700000</td>\n","      <td>7.7</td>\n","      <td>13.7</td>\n","      <td>111.0</td>\n","      <td>77.2</td>\n","      <td>83.3</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1635</th>\n","      <td>33</td>\n","      <td>12</td>\n","      <td>2018</td>\n","      <td>-17.8</td>\n","      <td>-6.3</td>\n","      <td>8.952381</td>\n","      <td>13.8</td>\n","      <td>18.6</td>\n","      <td>121.4</td>\n","      <td>65.8</td>\n","      <td>104.0</td>\n","    </tr>\n","    <tr>\n","      <th>1636</th>\n","      <td>33</td>\n","      <td>12</td>\n","      <td>2019</td>\n","      <td>-3.6</td>\n","      <td>4.5</td>\n","      <td>9.647619</td>\n","      <td>13.9</td>\n","      <td>18.2</td>\n","      <td>140.6</td>\n","      <td>76.3</td>\n","      <td>148.3</td>\n","    </tr>\n","    <tr>\n","      <th>1637</th>\n","      <td>33</td>\n","      <td>12</td>\n","      <td>2020</td>\n","      <td>-3.9</td>\n","      <td>3.3</td>\n","      <td>8.553846</td>\n","      <td>13.0</td>\n","      <td>18.7</td>\n","      <td>322.8</td>\n","      <td>78.0</td>\n","      <td>137.9</td>\n","    </tr>\n","    <tr>\n","      <th>1638</th>\n","      <td>33</td>\n","      <td>12</td>\n","      <td>2021</td>\n","      <td>-6.6</td>\n","      <td>2.0</td>\n","      <td>8.303571</td>\n","      <td>13.7</td>\n","      <td>20.3</td>\n","      <td>198.2</td>\n","      <td>120.7</td>\n","      <td>100.8</td>\n","    </tr>\n","    <tr>\n","      <th>1639</th>\n","      <td>33</td>\n","      <td>12</td>\n","      <td>2022</td>\n","      <td>-7.8</td>\n","      <td>3.4</td>\n","      <td>8.490909</td>\n","      <td>13.3</td>\n","      <td>21.3</td>\n","      <td>94.6</td>\n","      <td>94.2</td>\n","      <td>88.9</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1640 rows × 11 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d853e527-9944-4d12-948d-959fae8f0186')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-d853e527-9944-4d12-948d-959fae8f0186 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-d853e527-9944-4d12-948d-959fae8f0186');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-b5316cba-49ec-45ff-8127-d5c9b4ff777b\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-b5316cba-49ec-45ff-8127-d5c9b4ff777b')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-b5316cba-49ec-45ff-8127-d5c9b4ff777b button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":246}]},{"cell_type":"markdown","source":["## test de visu"],"metadata":{"id":"tqGXWMuf21fO"}},{"cell_type":"code","source":["ens_moyen_par_annee = df.groupby('mois')['ENS'].mean()\n","rr_moyen_par_annee = df.groupby('mois')['RR'].mean()\n","\n","plt.figure(figsize=(10, 6))\n","plt.plot(ens_moyen_par_annee.index, ens_moyen_par_annee.values, marker='o', linestyle='-', label='ENS')\n","plt.plot(rr_moyen_par_annee.index, rr_moyen_par_annee.values, marker='o', linestyle='-', color='red', label='RR')\n","\n","plt.title('Moyenne de ENS et RR par année')\n","plt.xlabel('Année')\n","plt.ylabel('Valeurs moyennes')\n","plt.legend()\n","\n","plt.show()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":565},"id":"Nw3_Z6NP2069","executionInfo":{"status":"ok","timestamp":1700837824899,"user_tz":-60,"elapsed":532,"user":{"displayName":"quentin crouzoulon","userId":"01290518250657410380"}},"outputId":"7f8b58ee-0ab2-4f72-ff3c-c55bbbb245fe"},"execution_count":247,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["dff = df.copy()\n","\n","dff = dff[(dff['annee'] >= 2006)]"],"metadata":{"id":"SQ_KJkFXyy0a","executionInfo":{"status":"ok","timestamp":1700837824900,"user_tz":-60,"elapsed":16,"user":{"displayName":"quentin crouzoulon","userId":"01290518250657410380"}}},"execution_count":248,"outputs":[]},{"cell_type":"code","source":["dff.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"3kMcnAqSzBlS","executionInfo":{"status":"ok","timestamp":1700837824900,"user_tz":-60,"elapsed":14,"user":{"displayName":"quentin crouzoulon","userId":"01290518250657410380"}},"outputId":"1621950a-0060-4e6d-bb54-12187a314c95"},"execution_count":249,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","Int64Index: 214 entries, 117 to 1639\n","Data columns (total 11 columns):\n"," #   Column  Non-Null Count  Dtype  \n","---  ------  --------------  -----  \n"," 0   DEP     214 non-null    int64  \n"," 1   mois    214 non-null    int64  \n"," 2   annee   214 non-null    int64  \n"," 3   TNN     214 non-null    float64\n"," 4   TNM     214 non-null    float64\n"," 5   TMM     214 non-null    float64\n"," 6   TXM     214 non-null    float64\n"," 7   TXX     214 non-null    float64\n"," 8   RR      214 non-null    float64\n"," 9   ENS     214 non-null    float64\n"," 10  Rafale  214 non-null    float64\n","dtypes: float64(8), int64(3)\n","memory usage: 20.1 KB\n"]}]},{"cell_type":"markdown","source":["a ce stade nous avons toute les données de 2000 à 2023 avec les bons types pour chaque donnée.\n","une colonne DEP qui contient le département, Station sera conserver car on pourra peut entre en avoir besoin\n","et le dataset ne présent plus de nan"],"metadata":{"id":"q3C3kw8R4Gcz"}},{"cell_type":"markdown","source":["#INCENDIES"],"metadata":{"id":"fwkpQWWk4yGQ"}},{"cell_type":"markdown","source":["##IMPORT FICHIER"],"metadata":{"id":"ZRPR-DkD5YQ9"}},{"cell_type":"code","source":["incendie_data = pd.read_csv('/content/drive/My Drive/AMFF/GIRONDE/Incendies.csv')\n","incendie_data.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":515},"id":"ZNe_3zQt4Xco","executionInfo":{"status":"ok","timestamp":1700837825395,"user_tz":-60,"elapsed":503,"user":{"displayName":"quentin crouzoulon","userId":"01290518250657410380"}},"outputId":"39197718-e48d-4b48-a24b-6d0cd564b017"},"execution_count":250,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-250-2db0f2324a72>:1: DtypeWarning: Columns (18,33,35) have mixed types. Specify dtype option on import or set low_memory=False.\n","  incendie_data = pd.read_csv('/content/drive/My Drive/AMFF/GIRONDE/Incendies.csv')\n"]},{"output_type":"execute_result","data":{"text/plain":["   Année  Numéro Département Code INSEE  Nom de la commune  \\\n","0   1973       1           5       5169           Sorbiers   \n","1   1973       2           5       5178           Ventavon   \n","2   1973       3           5       5078  Monêtier-Allemont   \n","3   1973       4           5       5048         Épine (L')   \n","4   1973       5           5       5127            Rousset   \n","\n","  Date de première alerte       Origine de l'alerte  \\\n","0     1973-07-03 05:45:00                Population   \n","1     1973-08-22 16:25:00  Pompiers pré-positionnés   \n","2     1973-08-23 14:15:00  Pompiers pré-positionnés   \n","3     1973-08-22 15:20:00  Pompiers pré-positionnés   \n","4     1973-09-15 20:00:00  Pompiers pré-positionnés   \n","\n","   Moyens de première intervention  Surface parcourue (m2)  \\\n","0                              NaN                  100000   \n","1                              NaN                   10000   \n","2                              NaN                    5000   \n","3                              NaN                   20000   \n","4                              NaN                  150000   \n","\n","   Surface forêt (m2)  ...  Décès ou bâtiments touchés  Nombre de décès  \\\n","0                 0.0  ...                         Non              NaN   \n","1                 0.0  ...                         Non              NaN   \n","2                 0.0  ...                         Non              NaN   \n","3                 0.0  ...                         Non              NaN   \n","4                 0.0  ...                         Non              NaN   \n","\n","   Nombre de bâtiments totalement détruits  \\\n","0                                      NaN   \n","1                                      NaN   \n","2                                      NaN   \n","3                                      NaN   \n","4                                      NaN   \n","\n","   Nombre de bâtiments partiellement détruits  Hygrométrie (%)  \\\n","0                                         NaN              NaN   \n","1                                         NaN              NaN   \n","2                                         NaN              NaN   \n","3                                         NaN              NaN   \n","4                                         NaN              NaN   \n","\n","   Vitesse moyenne du vent (Km/h)  Direction du vent  Température (°C)  \\\n","0                             NaN                NaN               NaN   \n","1                             NaN                NaN               NaN   \n","2                             NaN                NaN               NaN   \n","3                             NaN                NaN               NaN   \n","4                             NaN                NaN               NaN   \n","\n","  Précision de la donnée  Présence d'un contour valide  \n","0                    NaN                           Non  \n","1                    NaN                           Non  \n","2                    NaN                           Non  \n","3                    NaN                           Non  \n","4                    NaN                           Non  \n","\n","[5 rows x 37 columns]"],"text/html":["\n","  <div id=\"df-d4a4d561-bda6-49b4-99b3-22261814268a\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Année</th>\n","      <th>Numéro</th>\n","      <th>Département</th>\n","      <th>Code INSEE</th>\n","      <th>Nom de la commune</th>\n","      <th>Date de première alerte</th>\n","      <th>Origine de l'alerte</th>\n","      <th>Moyens de première intervention</th>\n","      <th>Surface parcourue (m2)</th>\n","      <th>Surface forêt (m2)</th>\n","      <th>...</th>\n","      <th>Décès ou bâtiments touchés</th>\n","      <th>Nombre de décès</th>\n","      <th>Nombre de bâtiments totalement détruits</th>\n","      <th>Nombre de bâtiments partiellement détruits</th>\n","      <th>Hygrométrie (%)</th>\n","      <th>Vitesse moyenne du vent (Km/h)</th>\n","      <th>Direction du vent</th>\n","      <th>Température (°C)</th>\n","      <th>Précision de la donnée</th>\n","      <th>Présence d'un contour valide</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1973</td>\n","      <td>1</td>\n","      <td>5</td>\n","      <td>5169</td>\n","      <td>Sorbiers</td>\n","      <td>1973-07-03 05:45:00</td>\n","      <td>Population</td>\n","      <td>NaN</td>\n","      <td>100000</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>Non</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Non</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1973</td>\n","      <td>2</td>\n","      <td>5</td>\n","      <td>5178</td>\n","      <td>Ventavon</td>\n","      <td>1973-08-22 16:25:00</td>\n","      <td>Pompiers pré-positionnés</td>\n","      <td>NaN</td>\n","      <td>10000</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>Non</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Non</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1973</td>\n","      <td>3</td>\n","      <td>5</td>\n","      <td>5078</td>\n","      <td>Monêtier-Allemont</td>\n","      <td>1973-08-23 14:15:00</td>\n","      <td>Pompiers pré-positionnés</td>\n","      <td>NaN</td>\n","      <td>5000</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>Non</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Non</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1973</td>\n","      <td>4</td>\n","      <td>5</td>\n","      <td>5048</td>\n","      <td>Épine (L')</td>\n","      <td>1973-08-22 15:20:00</td>\n","      <td>Pompiers pré-positionnés</td>\n","      <td>NaN</td>\n","      <td>20000</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>Non</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Non</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1973</td>\n","      <td>5</td>\n","      <td>5</td>\n","      <td>5127</td>\n","      <td>Rousset</td>\n","      <td>1973-09-15 20:00:00</td>\n","      <td>Pompiers pré-positionnés</td>\n","      <td>NaN</td>\n","      <td>150000</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>Non</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Non</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows × 37 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d4a4d561-bda6-49b4-99b3-22261814268a')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-d4a4d561-bda6-49b4-99b3-22261814268a button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-d4a4d561-bda6-49b4-99b3-22261814268a');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-7db2ea41-0b47-460e-95a8-e35dab7d33c4\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-7db2ea41-0b47-460e-95a8-e35dab7d33c4')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-7db2ea41-0b47-460e-95a8-e35dab7d33c4 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":250}]},{"cell_type":"code","source":["incendie_data.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"6TFbAvZKPaBh","executionInfo":{"status":"ok","timestamp":1700837825779,"user_tz":-60,"elapsed":394,"user":{"displayName":"quentin crouzoulon","userId":"01290518250657410380"}},"outputId":"fde5d1d0-ad1a-44a6-b3d6-d7c5e7093e9c"},"execution_count":251,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 136094 entries, 0 to 136093\n","Data columns (total 37 columns):\n"," #   Column                                           Non-Null Count   Dtype  \n","---  ------                                           --------------   -----  \n"," 0   Année                                            136094 non-null  int64  \n"," 1   Numéro                                           136094 non-null  int64  \n"," 2   Département                                      136094 non-null  object \n"," 3   Code INSEE                                       136094 non-null  object \n"," 4   Nom de la commune                                136067 non-null  object \n"," 5   Date de première alerte                          136094 non-null  object \n"," 6   Origine de l'alerte                              136094 non-null  object \n"," 7   Moyens de première intervention                  46105 non-null   float64\n"," 8   Surface parcourue (m2)                           136094 non-null  int64  \n"," 9   Surface forêt (m2)                               123606 non-null  float64\n"," 10  Surface maquis garrigues (m2)                    106011 non-null  float64\n"," 11  Autres surfaces naturelles hors forêt (m2)       17000 non-null   float64\n"," 12  Surfaces agricoles (m2)                          119 non-null     float64\n"," 13  Autres surfaces (m2)                             108 non-null     float64\n"," 14  Surface autres terres boisées (m2)               16923 non-null   float64\n"," 15  Surfaces non boisées naturelles (m2)             10387 non-null   float64\n"," 16  Surfaces non boisées artificialisées (m2)        10120 non-null   float64\n"," 17  Surfaces non boisées (m2)                        30322 non-null   float64\n"," 18  Précision des surfaces                           9017 non-null    object \n"," 19  Surface de feu à l'arrivée des secours > 0,1 ha  16296 non-null   float64\n"," 20  Voie carrossable la plus proche                  72967 non-null   float64\n"," 21  Activité ou habitation la plus proche            65105 non-null   float64\n"," 22  Type de peuplement                               76102 non-null   float64\n"," 23  Connaissance                                     98165 non-null   object \n"," 24  Source de l'enquête                              110449 non-null  object \n"," 25  Nature                                           47794 non-null   object \n"," 26  Intervention de l'équipe RCCI                    136094 non-null  object \n"," 27  Décès ou bâtiments touchés                       136094 non-null  object \n"," 28  Nombre de décès                                  70 non-null      float64\n"," 29  Nombre de bâtiments totalement détruits          70 non-null      float64\n"," 30  Nombre de bâtiments partiellement détruits       70 non-null      float64\n"," 31  Hygrométrie (%)                                  1886 non-null    float64\n"," 32  Vitesse moyenne du vent (Km/h)                   2295 non-null    float64\n"," 33  Direction du vent                                2168 non-null    object \n"," 34  Température (°C)                                 2213 non-null    float64\n"," 35  Précision de la donnée                           691 non-null     object \n"," 36  Présence d'un contour valide                     136094 non-null  object \n","dtypes: float64(20), int64(3), object(14)\n","memory usage: 38.4+ MB\n"]}]},{"cell_type":"markdown","source":["nous gardons que les éléments utiles"],"metadata":{"id":"t6azJdyXK56U"}},{"cell_type":"code","source":["incendie_data = incendie_data[[\"Nom de la commune\",\"Département\",\"Surface parcourue (m2)\",\"Date de première alerte\",\"Année\"]]"],"metadata":{"id":"FSQTVZuHKFRR","executionInfo":{"status":"ok","timestamp":1700837825780,"user_tz":-60,"elapsed":9,"user":{"displayName":"quentin crouzoulon","userId":"01290518250657410380"}}},"execution_count":252,"outputs":[]},{"cell_type":"code","source":["# Récupère le mois\n","incendie_data['mois'] = incendie_data['Date de première alerte'].str.split('-').str[1]\n","incendie_data = incendie_data.drop(['Date de première alerte'], axis=1)\n","incendie_data.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"J9ePYKz-Kob6","executionInfo":{"status":"ok","timestamp":1700837826043,"user_tz":-60,"elapsed":271,"user":{"displayName":"quentin crouzoulon","userId":"01290518250657410380"}},"outputId":"a2f5925a-3447-4c9a-ee97-2b9de678885c"},"execution_count":253,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Nom de la commune Département  Surface parcourue (m2)  Année mois\n","0           Sorbiers           5                  100000   1973   07\n","1           Ventavon           5                   10000   1973   08\n","2  Monêtier-Allemont           5                    5000   1973   08\n","3         Épine (L')           5                   20000   1973   08\n","4            Rousset           5                  150000   1973   09"],"text/html":["\n","  <div id=\"df-42392582-78ae-42ea-b70d-cd4540131658\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Nom de la commune</th>\n","      <th>Département</th>\n","      <th>Surface parcourue (m2)</th>\n","      <th>Année</th>\n","      <th>mois</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Sorbiers</td>\n","      <td>5</td>\n","      <td>100000</td>\n","      <td>1973</td>\n","      <td>07</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Ventavon</td>\n","      <td>5</td>\n","      <td>10000</td>\n","      <td>1973</td>\n","      <td>08</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Monêtier-Allemont</td>\n","      <td>5</td>\n","      <td>5000</td>\n","      <td>1973</td>\n","      <td>08</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Épine (L')</td>\n","      <td>5</td>\n","      <td>20000</td>\n","      <td>1973</td>\n","      <td>08</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Rousset</td>\n","      <td>5</td>\n","      <td>150000</td>\n","      <td>1973</td>\n","      <td>09</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-42392582-78ae-42ea-b70d-cd4540131658')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-42392582-78ae-42ea-b70d-cd4540131658 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-42392582-78ae-42ea-b70d-cd4540131658');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-9019981a-442e-4a4b-acbe-bbae6d9921d2\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-9019981a-442e-4a4b-acbe-bbae6d9921d2')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-9019981a-442e-4a4b-acbe-bbae6d9921d2 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":253}]},{"cell_type":"code","source":["# Copier le DataFrame\n","dt_test = incendie_data.copy()\n","\n","# on ne garde que les incendies girondins\n","dt_test = dt_test[(dt_test['Département'] == '33')]\n","dt_test['Département'] = dt_test['Département'].astype(int)\n","dt_test['mois'] = dt_test['mois'].astype(int)\n","\n","# Regrouper par département, mois et année et effectuer les moyenne\n","dt_test = dt_test.groupby(['Département', 'mois', 'Année']).agg(\n","    nombre_d_incendies=('Département', 'size'),  # Count\n","    surface_moyenne=('Surface parcourue (m2)', 'mean')\n",").reset_index()\n","\n","dt_test.head()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"RuQNb63vK_Y8","executionInfo":{"status":"ok","timestamp":1700837826044,"user_tz":-60,"elapsed":34,"user":{"displayName":"quentin crouzoulon","userId":"01290518250657410380"}},"outputId":"687f2a50-7c4d-4dd8-be1e-f059e9ea48ca"},"execution_count":254,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Département  mois  Année  nombre_d_incendies  surface_moyenne\n","0           33     1   2009                   1        10.000000\n","1           33     1   2011                   2      2515.000000\n","2           33     1   2017                   1        20.000000\n","3           33     2   2006                   6      3516.666667\n","4           33     2   2007                   2       600.000000"],"text/html":["\n","  <div id=\"df-cf725309-746a-429d-9dd7-841f006a470a\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Département</th>\n","      <th>mois</th>\n","      <th>Année</th>\n","      <th>nombre_d_incendies</th>\n","      <th>surface_moyenne</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>33</td>\n","      <td>1</td>\n","      <td>2009</td>\n","      <td>1</td>\n","      <td>10.000000</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>33</td>\n","      <td>1</td>\n","      <td>2011</td>\n","      <td>2</td>\n","      <td>2515.000000</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>33</td>\n","      <td>1</td>\n","      <td>2017</td>\n","      <td>1</td>\n","      <td>20.000000</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>33</td>\n","      <td>2</td>\n","      <td>2006</td>\n","      <td>6</td>\n","      <td>3516.666667</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>33</td>\n","      <td>2</td>\n","      <td>2007</td>\n","      <td>2</td>\n","      <td>600.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-cf725309-746a-429d-9dd7-841f006a470a')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-cf725309-746a-429d-9dd7-841f006a470a button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-cf725309-746a-429d-9dd7-841f006a470a');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-a99b32ff-6728-4042-b371-ccc48fbb64cf\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-a99b32ff-6728-4042-b371-ccc48fbb64cf')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-a99b32ff-6728-4042-b371-ccc48fbb64cf button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":254}]},{"cell_type":"code","source":["dt_test['Année'].min()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"YPxw1ovMyaDa","executionInfo":{"status":"ok","timestamp":1700837826044,"user_tz":-60,"elapsed":32,"user":{"displayName":"quentin crouzoulon","userId":"01290518250657410380"}},"outputId":"9c529fc5-71ad-4ba2-cd39-8c689453ee12"},"execution_count":255,"outputs":[{"output_type":"execute_result","data":{"text/plain":["2006"]},"metadata":{},"execution_count":255}]},{"cell_type":"code","source":["dt_test = dt_test.rename(columns={'Année': 'annee'})\n"],"metadata":{"id":"CkyzpCsw0usC","executionInfo":{"status":"ok","timestamp":1700837826044,"user_tz":-60,"elapsed":26,"user":{"displayName":"quentin crouzoulon","userId":"01290518250657410380"}}},"execution_count":256,"outputs":[]},{"cell_type":"code","source":["dt_test.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Pk0T80TTL_hu","executionInfo":{"status":"ok","timestamp":1700837826044,"user_tz":-60,"elapsed":24,"user":{"displayName":"quentin crouzoulon","userId":"01290518250657410380"}},"outputId":"df2fcfb5-bc8e-44ad-eadc-5ba1d783f616"},"execution_count":257,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 161 entries, 0 to 160\n","Data columns (total 5 columns):\n"," #   Column              Non-Null Count  Dtype  \n","---  ------              --------------  -----  \n"," 0   Département         161 non-null    int64  \n"," 1   mois                161 non-null    int64  \n"," 2   annee               161 non-null    int64  \n"," 3   nombre_d_incendies  161 non-null    int64  \n"," 4   surface_moyenne     161 non-null    float64\n","dtypes: float64(1), int64(4)\n","memory usage: 6.4 KB\n"]}]},{"cell_type":"code","source":["# dt_test['nombre_d_incendies'].max()\n","dt_test.iloc[dt_test['nombre_d_incendies'].idxmax()]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"inYFLRV0MeEx","executionInfo":{"status":"ok","timestamp":1700837826342,"user_tz":-60,"elapsed":319,"user":{"displayName":"quentin crouzoulon","userId":"01290518250657410380"}},"outputId":"58ddfbdb-c946-4b0f-f227-87b871106ba4"},"execution_count":258,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Département             33.000000\n","mois                     7.000000\n","annee                 2006.000000\n","nombre_d_incendies     167.000000\n","surface_moyenne       2742.407186\n","Name: 83, dtype: float64"]},"metadata":{},"execution_count":258}]},{"cell_type":"code","source":["feu_moyen_par_annee = dt_test.groupby('annee')['nombre_d_incendies'].mean()\n","\n","plt.figure(figsize=(8, 6))\n","plt.plot(feu_moyen_par_annee.index, feu_moyen_par_annee.values, marker='o', linestyle='-', label='nombre_d_incendies')\n","\n","plt.title('Moyenne des feux par année')\n","plt.xlabel('Année')\n","plt.ylabel('Valeurs moyennes')\n","plt.legend()\n","\n","plt.show()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":565},"id":"-XKag3wxVta3","executionInfo":{"status":"ok","timestamp":1700837842112,"user_tz":-60,"elapsed":882,"user":{"displayName":"quentin crouzoulon","userId":"01290518250657410380"}},"outputId":"4cbc90b9-c56e-4323-f662-6ad08509c194"},"execution_count":260,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 800x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["# merge final de nos 2 dataset"],"metadata":{"id":"yS5McMzYz0bw"}},{"cell_type":"code","source":["# Fusion des DataFrames sur les colonnes 'mois' et 'annee' avec how='left'\n","merged_df = pd.merge(dff, dt_test, on=['mois', 'annee'], how='left')\n","\n","# Remplacer les valeurs NaN par 0\n","merged_df.fillna(0, inplace=True)\n","\n","# Afficher le DataFrame fusionné\n","merged_df.tail()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":226},"id":"39k0-36Bz5XN","executionInfo":{"status":"ok","timestamp":1700837897874,"user_tz":-60,"elapsed":574,"user":{"displayName":"quentin crouzoulon","userId":"01290518250657410380"}},"outputId":"22ad4179-99b8-4c6d-c7e2-366e57b94cb6"},"execution_count":263,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     DEP  mois  annee   TNN  TNM       TMM   TXM   TXX     RR    ENS  Rafale  \\\n","209   33    12   2018 -17.8 -6.3  8.952381  13.8  18.6  121.4   65.8   104.0   \n","210   33    12   2019  -3.6  4.5  9.647619  13.9  18.2  140.6   76.3   148.3   \n","211   33    12   2020  -3.9  3.3  8.553846  13.0  18.7  322.8   78.0   137.9   \n","212   33    12   2021  -6.6  2.0  8.303571  13.7  20.3  198.2  120.7   100.8   \n","213   33    12   2022  -7.8  3.4  8.490909  13.3  21.3   94.6   94.2    88.9   \n","\n","     Département  nombre_d_incendies  surface_moyenne  \n","209          0.0                 0.0              0.0  \n","210          0.0                 0.0              0.0  \n","211          0.0                 0.0              0.0  \n","212          0.0                 0.0              0.0  \n","213         33.0                 1.0              8.0  "],"text/html":["\n","  <div id=\"df-16cd04e1-96f3-4c0e-a19a-5d3feb188ef7\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>DEP</th>\n","      <th>mois</th>\n","      <th>annee</th>\n","      <th>TNN</th>\n","      <th>TNM</th>\n","      <th>TMM</th>\n","      <th>TXM</th>\n","      <th>TXX</th>\n","      <th>RR</th>\n","      <th>ENS</th>\n","      <th>Rafale</th>\n","      <th>Département</th>\n","      <th>nombre_d_incendies</th>\n","      <th>surface_moyenne</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>209</th>\n","      <td>33</td>\n","      <td>12</td>\n","      <td>2018</td>\n","      <td>-17.8</td>\n","      <td>-6.3</td>\n","      <td>8.952381</td>\n","      <td>13.8</td>\n","      <td>18.6</td>\n","      <td>121.4</td>\n","      <td>65.8</td>\n","      <td>104.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>210</th>\n","      <td>33</td>\n","      <td>12</td>\n","      <td>2019</td>\n","      <td>-3.6</td>\n","      <td>4.5</td>\n","      <td>9.647619</td>\n","      <td>13.9</td>\n","      <td>18.2</td>\n","      <td>140.6</td>\n","      <td>76.3</td>\n","      <td>148.3</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>211</th>\n","      <td>33</td>\n","      <td>12</td>\n","      <td>2020</td>\n","      <td>-3.9</td>\n","      <td>3.3</td>\n","      <td>8.553846</td>\n","      <td>13.0</td>\n","      <td>18.7</td>\n","      <td>322.8</td>\n","      <td>78.0</td>\n","      <td>137.9</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>212</th>\n","      <td>33</td>\n","      <td>12</td>\n","      <td>2021</td>\n","      <td>-6.6</td>\n","      <td>2.0</td>\n","      <td>8.303571</td>\n","      <td>13.7</td>\n","      <td>20.3</td>\n","      <td>198.2</td>\n","      <td>120.7</td>\n","      <td>100.8</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>213</th>\n","      <td>33</td>\n","      <td>12</td>\n","      <td>2022</td>\n","      <td>-7.8</td>\n","      <td>3.4</td>\n","      <td>8.490909</td>\n","      <td>13.3</td>\n","      <td>21.3</td>\n","      <td>94.6</td>\n","      <td>94.2</td>\n","      <td>88.9</td>\n","      <td>33.0</td>\n","      <td>1.0</td>\n","      <td>8.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-16cd04e1-96f3-4c0e-a19a-5d3feb188ef7')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-16cd04e1-96f3-4c0e-a19a-5d3feb188ef7 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-16cd04e1-96f3-4c0e-a19a-5d3feb188ef7');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-3409ae85-8ccb-44b1-863a-da07d3b3b7ed\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-3409ae85-8ccb-44b1-863a-da07d3b3b7ed')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-3409ae85-8ccb-44b1-863a-da07d3b3b7ed button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":263}]},{"cell_type":"code","source":["merged_df[(merged_df[\"mois\"] == 1) & (merged_df[\"annee\"] == 2011)]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":100},"id":"GE4lA6Vp13Nt","executionInfo":{"status":"ok","timestamp":1700838005385,"user_tz":-60,"elapsed":319,"user":{"displayName":"quentin crouzoulon","userId":"01290518250657410380"}},"outputId":"254f5fb5-70df-4312-f0be-4db412c9e01e"},"execution_count":265,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   DEP  mois  annee  TNN  TNM       TMM   TXM   TXX    RR    ENS  Rafale  \\\n","5   33     1   2011 -6.8  0.7  7.090909  13.1  18.7  40.2  116.5   100.8   \n","\n","   Département  nombre_d_incendies  surface_moyenne  \n","5         33.0                 2.0           2515.0  "],"text/html":["\n","  <div id=\"df-6b1f4d97-af4f-44a9-9160-222429777398\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>DEP</th>\n","      <th>mois</th>\n","      <th>annee</th>\n","      <th>TNN</th>\n","      <th>TNM</th>\n","      <th>TMM</th>\n","      <th>TXM</th>\n","      <th>TXX</th>\n","      <th>RR</th>\n","      <th>ENS</th>\n","      <th>Rafale</th>\n","      <th>Département</th>\n","      <th>nombre_d_incendies</th>\n","      <th>surface_moyenne</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>5</th>\n","      <td>33</td>\n","      <td>1</td>\n","      <td>2011</td>\n","      <td>-6.8</td>\n","      <td>0.7</td>\n","      <td>7.090909</td>\n","      <td>13.1</td>\n","      <td>18.7</td>\n","      <td>40.2</td>\n","      <td>116.5</td>\n","      <td>100.8</td>\n","      <td>33.0</td>\n","      <td>2.0</td>\n","      <td>2515.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6b1f4d97-af4f-44a9-9160-222429777398')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-6b1f4d97-af4f-44a9-9160-222429777398 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-6b1f4d97-af4f-44a9-9160-222429777398');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":265}]},{"cell_type":"code","source":["merged_df.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"UorxhAEt1vIw","executionInfo":{"status":"ok","timestamp":1700838115460,"user_tz":-60,"elapsed":237,"user":{"displayName":"quentin crouzoulon","userId":"01290518250657410380"}},"outputId":"435d203d-1e59-4845-ca0f-e09e2218555b"},"execution_count":268,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","Int64Index: 214 entries, 0 to 213\n","Data columns (total 12 columns):\n"," #   Column              Non-Null Count  Dtype  \n","---  ------              --------------  -----  \n"," 0   mois                214 non-null    int64  \n"," 1   annee               214 non-null    int64  \n"," 2   TNN                 214 non-null    float64\n"," 3   TNM                 214 non-null    float64\n"," 4   TMM                 214 non-null    float64\n"," 5   TXM                 214 non-null    float64\n"," 6   TXX                 214 non-null    float64\n"," 7   RR                  214 non-null    float64\n"," 8   ENS                 214 non-null    float64\n"," 9   Rafale              214 non-null    float64\n"," 10  nombre_d_incendies  214 non-null    float64\n"," 11  surface_moyenne     214 non-null    float64\n","dtypes: float64(10), int64(2)\n","memory usage: 29.8 KB\n"]}]},{"cell_type":"code","source":["merged_df.drop(['DEP', 'Département'], axis=1, inplace=True)\n"],"metadata":{"id":"RReaf4FH2JxI","executionInfo":{"status":"ok","timestamp":1700838111527,"user_tz":-60,"elapsed":230,"user":{"displayName":"quentin crouzoulon","userId":"01290518250657410380"}}},"execution_count":267,"outputs":[]},{"cell_type":"code","source":["AMFF = merged_df.copy()\n","AMFF.to_csv('/content/drive/My Drive/AMFF/GIRONDE/AMFF.csv', index=False)"],"metadata":{"id":"T73QNhJF2jUq","executionInfo":{"status":"ok","timestamp":1700838257913,"user_tz":-60,"elapsed":524,"user":{"displayName":"quentin crouzoulon","userId":"01290518250657410380"}}},"execution_count":269,"outputs":[]}]}